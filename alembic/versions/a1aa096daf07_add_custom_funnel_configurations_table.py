"""add_custom_funnel_configurations_table

Revision ID: a1aa096daf07
Revises: ae810c6b31a3
Create Date: 2025-10-01 17:02:11.595343

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a1aa096daf07'
down_revision: Union[str, None] = 'ae810c6b31a3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_custom_funnel_workspace', table_name='custom_funnel_configurations')
    op.drop_table('custom_funnel_configurations')
    op.drop_index('idx_events_prompt_outcome', table_name='prompt_events')
    op.drop_index('idx_events_workspace_created', table_name='prompt_events')
    op.drop_index('ix_prompt_events_trace_id', table_name='prompt_events')
    op.drop_table('prompt_events')
    op.drop_index('idx_conversion_workspace', table_name='conversion_funnels')
    op.drop_table('conversion_funnels')
    op.drop_index('idx_metrics_prompt_hour', table_name='prompt_metrics_hourly')
    op.drop_index('idx_metrics_workspace_hour', table_name='prompt_metrics_hourly')
    op.drop_table('prompt_metrics_hourly')
    op.drop_table('ab_tests')
    op.drop_table('event_definitions')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event_definitions',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('workspace_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('event_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('required_fields', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('optional_fields', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('validation_rules', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('success_criteria', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('alert_thresholds', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='event_definitions_created_by_fkey'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], name='event_definitions_workspace_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='event_definitions_pkey'),
    sa.UniqueConstraint('workspace_id', 'event_name', name='event_definitions_workspace_id_event_name_key')
    )
    op.create_table('ab_tests',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('workspace_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('prompt_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('control_version_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('variant_version_ids', postgresql.ARRAY(sa.UUID()), autoincrement=False, nullable=False),
    sa.Column('traffic_allocation', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('metrics_to_track', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('winner_version_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('statistical_significance', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=True),
    sa.Column('sample_size_target', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('current_sample_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('ended_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['control_version_id'], ['prompt_versions.id'], name='ab_tests_control_version_id_fkey'),
    sa.ForeignKeyConstraint(['prompt_id'], ['prompts.id'], name='ab_tests_prompt_id_fkey'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], name='ab_tests_workspace_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='ab_tests_pkey')
    )
    op.create_table('prompt_metrics_hourly',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('workspace_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('prompt_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('prompt_version_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('hour_bucket', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('total_requests', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('successful_outcomes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('failed_outcomes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('partial_outcomes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('abandoned_outcomes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_revenue', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=True),
    sa.Column('total_value', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=True),
    sa.Column('conversion_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('unique_users', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('avg_response_time_ms', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('token_cost', sa.NUMERIC(precision=10, scale=4), autoincrement=False, nullable=True),
    sa.Column('error_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['prompt_id'], ['prompts.id'], name='prompt_metrics_hourly_prompt_id_fkey'),
    sa.ForeignKeyConstraint(['prompt_version_id'], ['prompt_versions.id'], name='prompt_metrics_hourly_prompt_version_id_fkey'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], name='prompt_metrics_hourly_workspace_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='prompt_metrics_hourly_pkey'),
    sa.UniqueConstraint('workspace_id', 'prompt_id', 'prompt_version_id', 'hour_bucket', name='prompt_metrics_hourly_workspace_id_prompt_id_prompt_version_key')
    )
    op.create_index('idx_metrics_workspace_hour', 'prompt_metrics_hourly', ['workspace_id', 'hour_bucket'], unique=False)
    op.create_index('idx_metrics_prompt_hour', 'prompt_metrics_hourly', ['prompt_id', 'hour_bucket'], unique=False)
    op.create_table('conversion_funnels',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('workspace_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('source_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('source_event_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('source_prompt_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('target_event_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('target_event_category', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('metric_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('metric_field', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('conversion_window_hours', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('color', sa.VARCHAR(length=7), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='conversion_funnels_created_by_fkey'),
    sa.ForeignKeyConstraint(['source_prompt_id'], ['prompts.id'], name='conversion_funnels_source_prompt_id_fkey'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], name='conversion_funnels_workspace_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='conversion_funnels_pkey'),
    sa.UniqueConstraint('workspace_id', 'name', name='conversion_funnels_workspace_id_name_key')
    )
    op.create_index('idx_conversion_workspace', 'conversion_funnels', ['workspace_id', 'is_active'], unique=False)
    op.create_table('prompt_events',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('workspace_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('trace_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('prompt_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('prompt_version_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('event_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('outcome', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('session_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('event_metadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('business_metrics', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('error_details', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['prompt_id'], ['prompts.id'], name='prompt_events_prompt_id_fkey'),
    sa.ForeignKeyConstraint(['prompt_version_id'], ['prompt_versions.id'], name='prompt_events_prompt_version_id_fkey'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], name='prompt_events_workspace_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='prompt_events_pkey')
    )
    op.create_index('ix_prompt_events_trace_id', 'prompt_events', ['trace_id'], unique=False)
    op.create_index('idx_events_workspace_created', 'prompt_events', ['workspace_id', 'created_at'], unique=False)
    op.create_index('idx_events_prompt_outcome', 'prompt_events', ['prompt_id', 'outcome', 'created_at'], unique=False)
    op.create_table('custom_funnel_configurations',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('workspace_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('event_steps', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='custom_funnel_configurations_created_by_fkey'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], name='custom_funnel_configurations_workspace_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='custom_funnel_configurations_pkey'),
    sa.UniqueConstraint('workspace_id', 'name', name='custom_funnel_configurations_workspace_id_name_key')
    )
    op.create_index('idx_custom_funnel_workspace', 'custom_funnel_configurations', ['workspace_id', 'is_active'], unique=False)
    # ### end Alembic commands ###
