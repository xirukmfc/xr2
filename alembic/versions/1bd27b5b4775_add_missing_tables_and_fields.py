"""add_missing_tables_and_fields

Revision ID: 1bd27b5b4775
Revises: dbf2260f1bdd
Create Date: 2025-09-10 21:40:04.467738

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1bd27b5b4775'
down_revision: Union[str, None] = 'dbf2260f1bdd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('global_limits',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('default_max_prompts', sa.Integer(), nullable=False),
    sa.Column('default_max_api_requests_per_day', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_global_limits_id'), 'global_limits', ['id'], unique=False)
    op.create_table('user_api_usage',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('api_requests_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_api_usage_date'), 'user_api_usage', ['date'], unique=False)
    op.create_index(op.f('ix_user_api_usage_id'), 'user_api_usage', ['id'], unique=False)
    op.create_index(op.f('ix_user_api_usage_user_id'), 'user_api_usage', ['user_id'], unique=False)
    op.create_table('user_limits',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('max_prompts', sa.Integer(), nullable=False),
    sa.Column('max_api_requests_per_day', sa.Integer(), nullable=False),
    sa.Column('use_global_limits', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_limits_id'), 'user_limits', ['id'], unique=False)
    op.create_index(op.f('ix_user_limits_user_id'), 'user_limits', ['user_id'], unique=True)
    op.drop_index('ix_api_requests_api_key_id', table_name='api_requests')
    op.drop_index('ix_api_requests_created_at', table_name='api_requests')
    op.drop_index('ix_api_requests_id', table_name='api_requests')
    op.drop_index('ix_api_requests_prompt_version_id', table_name='api_requests')
    op.drop_index('ix_api_requests_request_id', table_name='api_requests')
    op.drop_index('ix_api_requests_user_id', table_name='api_requests')
    op.drop_table('api_requests')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_requests',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('prompt_version_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('request_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('endpoint', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('method', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('input_variables', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('rendered_prompts', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('model_response', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('latency_ms', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('prompt_tokens', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('completion_tokens', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_tokens', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cost_cents', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status_code', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_success', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('api_key_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('environment', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['prompt_version_id'], ['prompt_versions.id'], name='api_requests_prompt_version_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='api_requests_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='api_requests_pkey')
    )
    op.create_index('ix_api_requests_user_id', 'api_requests', ['user_id'], unique=False)
    op.create_index('ix_api_requests_request_id', 'api_requests', ['request_id'], unique=False)
    op.create_index('ix_api_requests_prompt_version_id', 'api_requests', ['prompt_version_id'], unique=False)
    op.create_index('ix_api_requests_id', 'api_requests', ['id'], unique=False)
    op.create_index('ix_api_requests_created_at', 'api_requests', ['created_at'], unique=False)
    op.create_index('ix_api_requests_api_key_id', 'api_requests', ['api_key_id'], unique=False)
    op.drop_index(op.f('ix_user_limits_user_id'), table_name='user_limits')
    op.drop_index(op.f('ix_user_limits_id'), table_name='user_limits')
    op.drop_table('user_limits')
    op.drop_index(op.f('ix_user_api_usage_user_id'), table_name='user_api_usage')
    op.drop_index(op.f('ix_user_api_usage_id'), table_name='user_api_usage')
    op.drop_index(op.f('ix_user_api_usage_date'), table_name='user_api_usage')
    op.drop_table('user_api_usage')
    op.drop_index(op.f('ix_global_limits_id'), table_name='global_limits')
    op.drop_table('global_limits')
    # ### end Alembic commands ###
