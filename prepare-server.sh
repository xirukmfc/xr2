#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${YELLOW}üßπ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∫ –¥–µ–ø–ª–æ—é${NC}"
echo ""

# 1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo -e "${YELLOW}1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
docker compose --env-file .env.prod -f docker-compose.prod.yml down 2>/dev/null || true
echo -e "${GREEN}‚úÖ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ${NC}"
echo ""

# 2. –û—á–∏—Å—Ç–∏—Ç—å Docker –∫—ç—à –∏ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã
echo -e "${YELLOW}2. –û—á–∏—Å—Ç–∫–∞ Docker (–Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã, –∫—ç—à)...${NC}"
docker system prune -f
echo -e "${GREEN}‚úÖ –û—á–∏—â–µ–Ω–æ${NC}"
echo ""

# 3. –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã frontend (–µ—Å–ª–∏ –µ—Å—Ç—å)
echo -e "${YELLOW}3. –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤ frontend...${NC}"
docker images | grep xr2.*frontend | awk '{print $3}' | xargs -r docker rmi -f 2>/dev/null || true
echo -e "${GREEN}‚úÖ –£–¥–∞–ª–µ–Ω–æ${NC}"
echo ""

# 4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å swap
echo -e "${YELLOW}4. –ü—Ä–æ–≤–µ—Ä–∫–∞ swap...${NC}"
if [ $(swapon --show | wc -l) -eq 0 ]; then
    echo -e "${RED}‚ö†Ô∏è  Swap –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!${NC}"
    echo -e "${YELLOW}–°–æ–∑–¥–∞—é 4GB swap...${NC}"

    if [ ! -f /swapfile ]; then
        sudo fallocate -l 4G /swapfile
        sudo chmod 600 /swapfile
        sudo mkswap /swapfile
        sudo swapon /swapfile

        # –î–æ–±–∞–≤–∏—Ç—å –≤ fstab –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        if ! grep -q '/swapfile' /etc/fstab; then
            echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
        fi
        echo -e "${GREEN}‚úÖ Swap —Å–æ–∑–¥–∞–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω (4GB)${NC}"
    else
        sudo swapon /swapfile
        echo -e "${GREEN}‚úÖ Swap –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω${NC}"
    fi
else
    echo -e "${GREEN}‚úÖ Swap —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω:${NC}"
    swapon --show
fi
echo ""

# 5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ
echo -e "${YELLOW}5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ...${NC}"
DISK_USAGE=$(df -h / | awk 'NR==2 {print $5}' | sed 's/%//')
if [ $DISK_USAGE -gt 80 ]; then
    echo -e "${RED}‚ö†Ô∏è  –ú–∞–ª–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ (${DISK_USAGE}% –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ)${NC}"
    echo -e "${YELLOW}–û—á–∏—Å—Ç–∫–∞ Docker volumes –∏ build cache...${NC}"
    docker system prune -a --volumes -f
    echo -e "${GREEN}‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞${NC}"
else
    echo -e "${GREEN}‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ (${DISK_USAGE}% –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ)${NC}"
fi
df -h / | grep -v Filesystem
echo ""

# 6. –í–∫–ª—é—á–∏—Ç—å BuildKit
echo -e "${YELLOW}6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker BuildKit...${NC}"
export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1

# –î–æ–±–∞–≤–∏—Ç—å –≤ .bashrc –µ—Å–ª–∏ –Ω–µ—Ç
if ! grep -q "DOCKER_BUILDKIT" ~/.bashrc; then
    echo 'export DOCKER_BUILDKIT=1' >> ~/.bashrc
    echo 'export COMPOSE_DOCKER_CLI_BUILD=1' >> ~/.bashrc
    echo -e "${GREEN}‚úÖ BuildKit –¥–æ–±–∞–≤–ª–µ–Ω –≤ .bashrc${NC}"
else
    echo -e "${GREEN}‚úÖ BuildKit —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
fi
echo ""

# 7. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Docker daemon –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
echo -e "${YELLOW}7. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docker daemon...${NC}"
sudo systemctl restart docker
sleep 3
echo -e "${GREEN}‚úÖ Docker –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω${NC}"
echo ""

# 8. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
echo -e "${GREEN}üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:${NC}"
echo ""
echo -e "${YELLOW}–ü–∞–º—è—Ç—å:${NC}"
free -h
echo ""
echo -e "${YELLOW}–î–∏—Å–∫:${NC}"
df -h / | grep -v Filesystem
echo ""
echo -e "${YELLOW}Docker:${NC}"
docker system df
echo ""

echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–µ—Ä –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –∫ –¥–µ–ø–ª–æ—é!${NC}"
echo ""
echo -e "${YELLOW}–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å:${NC}"
echo "  export DOCKER_BUILDKIT=1 COMPOSE_DOCKER_CLI_BUILD=1"
echo "  make deploy-fast"
